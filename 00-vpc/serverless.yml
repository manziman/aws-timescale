service: webhook-networking

provider:
  name: aws
  region: ${env:REGION}

package:
  exclude:
    - ./**

# Resources 
resources:
  Resources:
    DatabaseVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: '${env:VPC_SUBNET}'
        EnableDnsSupport: true
        EnableDnsHostnames: true
        InstanceTenancy: default
        Tags:
          - Key: superstack
            Value: webhooks-example
    DatabaseVPCPrivateSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: '${env:DB_SUBNET_PRIV}'
        Tags:
          - Key: superstack
            Value: webhooks-example
        VpcId: ${self:resources.Outputs.DBVPCId.Value}
      DependsOn:
        - DatabaseVPC
    DatabaseVPCPublicSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: '${env:DB_SUBNET_PUB}'
        Tags:
          - Key: superstack
            Value: webhooks-example
        VpcId: ${self:resources.Outputs.DBVPCId.Value}
        MapPublicIpOnLaunch: true
      DependsOn:
        - DatabaseVPC
    DatabaseVPCInternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties: 
        Tags:
          - Key: superstack
            Value: webhooks-example
      DependsOn:
        - DatabaseVPC
    DatabaseVPCInternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties: 
        InternetGatewayId: ${self:resources.Outputs.DBVPCInternetGatewayId.Value}
        VpcId: ${self:resources.Outputs.DBVPCId.Value}
      DependsOn:
        - DatabaseVPC
        - DatabaseVPCInternetGateway
    DatabaseVPCRouteTable:
      Type: AWS::EC2::RouteTable
      Properties: 
        VpcId: ${self:resources.Outputs.DBVPCId.Value}
        Tags:
          - Key: superstack
            Value: webhooks-example
      DependsOn:
        - DatabaseVPC
    DatabaseVPCNatGatewayEIP:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc
      DependsOn:
        - DatabaseVPC
    DatabaseVPCNatGateway:
      Type: AWS::EC2::NatGateway
      Properties:
        AllocationId: ${self:resources.Outputs.DBVPCEIPId.Value}
        SubnetId: ${self:resources.Outputs.DBPubSubnetId.Value}
        Tags:
          - Key: superstack
            Value: webhooks-example
      DependsOn:
        - DatabaseVPCPublicSubnet
        - DatabaseVPCNatGatewayEIP
    DatabaseVPCDefaultRoute:
      Type: AWS::EC2::Route
      Properties: 
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: ${self:resources.Outputs.DBVPCNatGatewayId.Value}
        RouteTableId: ${self:resources.Outputs.DBVPCRouteTableId.Value}
      DependsOn:
        - DatabaseVPCNatGateway
        - DatabaseVPCRouteTable
    BastionSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: 'Bastion hosts - ssh'
        SecurityGroupIngress:
          - CidrIp: '0.0.0.0/0'
            Description: 'Bastion SSH rule'
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
        Tags:
          - Key: superstack
            Value: webhooks-example
        VpcId: ${self:resources.Outputs.DBVPCId.Value}
      DependsOn:
        - DatabaseVPC
  Outputs:
    DBVPCId:
      Value:
        Ref: DatabaseVPC
    DBVPCEIPId:
      Value:
        Fn::GetAtt: [ DatabaseVPCNatGatewayEIP, AllocationId ]
    DBSecurityGroupId:
      Value:
        Fn::GetAtt: [ DatabaseVPC, DefaultSecurityGroup ]  
    DBVPCNatGatewayId:
      Value:
        Ref: DatabaseVPCNatGateway
    DBVPCInternetGatewayId:
      Value:
        Ref: DatabaseVPCInternetGatewayAttachment
    DBVPCRouteTableId:
      Value:
        Ref: DatabaseVPCRouteTable
    DBPrivSubnetId:
      Value:
        Ref: DatabaseVPCPrivateSubnet
    DBPubSubnetId:
      Value:
        Ref: DatabaseVPCPublicSubnet
    BastionSecurityGroupId:
      Value:
        Ref: BastionSecurityGroup
